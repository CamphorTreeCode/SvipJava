package com.shensu.dao;

import java.util.HashMap;
import java.util.List;

import com.shensu.pojo.Recipes;
import com.shensu.pojo.RecipesType;
import com.shensu.pojo.Shop;

public interface RecipesMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Recipes
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer recipesid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Recipes
     *
     * @mbggenerated
     */
    int insert(Recipes record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Recipes
     *
     * @mbggenerated
     */
    int insertSelective(Recipes record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Recipes
     *
     * @mbggenerated
     */
    Recipes selectByPrimaryKey(Integer recipesid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Recipes
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Recipes record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Recipes
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(Recipes record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Recipes
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Recipes record);
    
    //增加食譜
	int insert(RecipesType recipsesType);
	
	//食譜列表展示
	List<Recipes> queryAllRecipes();
	
	//根据条件分页
    List<Recipes> selectByCondition(HashMap<String,Object> map);
    
    //根据条件查总数
    int selectCountByCondition(HashMap<String,Object> map);
    
    //添加一个商品
    int insertShop(Recipes recipes);
    
    //设置食谱为上架状态
	int putawayRecipes(int recipesId);
	
	//设置食谱为下架状态
	int unshelveRecipes(int recipesId);
    
	//根据类目id查询对应的食谱上架状态(小程序)
	List<Recipes> findRecipesSwiperList(int recipesTypeId);
	
	//查询食谱下面的详细信息(小程序)
	List<Recipes> findRecipesDetails(int recipesId);
	
	//根据类目id查询对应的食谱全部列表上架状态(小程序)
	List<Recipes> findRecipesList(int recipesTypeId);
	
	//视频文章曾家阅读浏览量(小程序)
	int addrecipesBrowse(int recipesId);
    //根据分类的id查询多少食谱
	int selectCountRecipes(int recipesTypeId);
    //根据食谱的id分页查询
	List<Recipes> selectRecipesPage(HashMap<String, Object> map);
    
}